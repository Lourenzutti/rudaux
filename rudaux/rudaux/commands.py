import os
import rudaux
import terminaltables as ttbl

# this is the only command that gets called on the student hub (for now)
# it should be called every X minutes using a cron job (X = 15, say, if you want your snapshots to have a max resolution of 15 mins)
# snapshots will only happen once per assignment (and once per override), so even if you set X = 1, it'll just make this command run a bunch without
# actually doing anything. The only cost is that it has to run this code every minute, which is probably too much. Most assignments are due
# on the hour / half hour at most, so every 15 should almost always be fine.
def submission_snapshot(args):
    course = rudaux.Course(args.directory)
    # if course setup fails, do ???
    # do a non-blocking update: 
    # if update fails (e.g. canvas is down), just take snapshots based on previous course obj. Snapshots are cheap and we may as well be conservative
    try:
        course.synchronize()
    except:
        pass
    # take snapshots of every assignment that has passed with no existing snapshot
    course.jupyterhub_snapshot()
    # send any notifications generated by this code (e.g. failed snapshots) to instructors
    course.send_notifications()

def print_list(args):
    course = rudaux.Course(args.directory)
    printouts = {'students' : 'Students', 'assignments' : 'Assignments', 'instructors' : 'Instructors', 'tas' : 'Teaching Assistants'}
    none_selected = not any([vars(args)[po] for po in printouts])
    for po in printouts:
        if vars(args).get(po) or none_selected:
            title = printouts[po]
            tbl = [['Name', 'Canvas ID']]
            for obj in course.__dict__[po]:
                tbl.append([obj.name, obj.canvas_id])
            print(ttbl.AsciiTable(tbl, title).table)

    # save only if there is no state file present
    # i.e., this command won't overwrite / update state unless
    # this is basically the first time rudaux is run here
    course.save_state(no_clobber = True)
 
#Ideas for other commands:
#status #return a report of status; subcommands:
##assignment (graded / feedback / solutions / etc)
##snapshot schedule 
##hard drive / memory usage? 
##errors in assignment grading
#
#schedule_tasks #creates a schedule of commands that run automatically
#               #snapshots, cloning repos, pulling, etc
#
#run #force running of a particular task now
#
##same commands as dictauth, just for rudaux_config
##these will call dictauth commands
#encrypt_password
#
#graders:
#list
#add
#remove


